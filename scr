#!/bin/sh
## screenshot utility by pdq for ldc
## https://www.linuxdistrocommunity.com/forums/index.php

## DEPENDS: this utility depends on having a dropbox account, scrot, xclip and (optionally) pngcrush. 
## DEPENDS: https://github.com/andreafabrizi/Dropbox-Uploader (set this up as per README)
## (The Dropbox application itself is not required.)

## BASIC USAGE: scr


## ADVANCED OPTIONS:

# -c, --count
#           Display a countdown when used with delay.

# -d, --delay NUM
#           Wait NUM seconds before taking a shot.

# -q, --quality NUM
#      Image  quality  (1-100) high value means high size, low compression. Default: 100.

# -m, --multidisp
#      For multiple heads, grab shot from each and join them together.

# -s, --select
#      Interactively select a window or rectangle with the mouse.

# -t, --thumb NUM
#      generate thumbnail too. NUM is the percentage of the original size for the thumbnail to be.


## ADVANCED USAGES:

## screenshot with countdown of 3 seconds
# scr -cd 3

## interactive screenshot
# scr -s

## START CONFIGURATION

## Path to dropbox-uploader executable
DBU_BIN=/usr/bin/dropbox_uploader ## Default /usr/bin/dropbox_uploader

## Path to web browser
#BROWSER="vbp"
BROWSER="firefox"

## Type of Dropbox link
PUBLIC_USE=1 ## 1/0 (On/Off) # On allows for direct links, Off uses shared (javascript) links. [Default 1]

## Save local copy?
LOCAL_COPY=1 ## 1/0 (On/Off) # [Default 1]

## You COULD change this:
EXTRA='usewithtor '          ## for no proxy leave blank

## END CONFIGURATION


## ZE CODE MAGIC

## You DON'T need to change this
DROPBOX_UID=$HOME/.dropbox/UID ## this file will be automagically created

## You DON'T need change this:
SCREENSHOTS_DIR=screens 

## You DON'T need to change this:
FILENAME=$(date +%m%d%S).png

## You DON'T need to change this:
SCROT_ARGS="-q 100 $@"

## request user dropbox uid file
if [ ! -f $DROPBOX_UID ]; then
	${EXTRA}$DBU_BIN info | grep UID: | cut -c6- > $DROPBOX_UID
fi

## create required uid file
UID_INFO=$(cat $DROPBOX_UID)
if [ "$UID_INFO" = "" ]; then
	echo "Install and configure drobox-uploader."
	echo "Visit: http://www.webupd8.org/2013/09/dropbox-uploader-012-released-bash.html"
	echo "Then re-reun this command. Exiting in 10 seconds"
	rm "$DROPBOX_UID"
	sleep 10s
	exit 1
fi

## You DON'T need to chaneg this
PUBLIC_URL=https://dl.dropboxusercontent.com/u/$UID_INFO

if [ $PUBLIC_USE -eq 1 ]; then
	DROPBOX_PATH=$HOME/Dropbox/Public
	REMOTE_PATH=Public/
else
	DROPBOX_PATH=$HOME/Dropbox
	REMOTE_PATH=
fi

## create screenshots directory locally if not exist
if [ $LOCAL_COPY -eq 1 ]; then
	mkdir -p $DROPBOX_PATH/$SCREENSHOTS_DIR
fi

## create screenshots directory remotely if not exist
${EXTRA}$DBU_BIN mkdir $REMOTE_PATH$SCREENSHOTS_DIR

## let user know proxy is in use
if [ "$EXTRA" != "" ]; then
	echo "Using proxy...this may take a while... "
fi

## take screenshot
PWD=$(pwd)
if [ $LOCAL_COPY -eq 1 ]; then
	cd "$DROPBOX_PATH/$SCREENSHOTS_DIR"
else
	cd /tmp
fi

while getopts "sVcd:q:mst:" opt
do
	case $opt in
		V) echo "$(basename $0): Version: 0.0.1 Date: 09/13/2013"
		   exit 0;;
		s) echo 'Select window now...';;
	esac
done

scrot $SCROT_ARGS $FILENAME

if [ -f "/usr/bin/pngcrush" ]; then
	if test "${FILENAME##*.}" == "png"
	then
		ALT_FILENAME=$(mktemp -u).png
		pngcrush -q $FILENAME $ALT_FILENAME
		mv $ALT_FILENAME $FILENAME
	fi
fi

## upload screenshot to Dropbox remote server
${EXTRA}$DBU_BIN upload $FILENAME $REMOTE_PATH$SCREENSHOTS_DIR/

## back to where we started from
cd "$PWD"

## create share link
if [ $PUBLIC_USE -eq 1 ]; then
	IMAGEPATH=$PUBLIC_URL/$SCREENSHOTS_DIR/$FILENAME 
else
	IMAGEPATH=$(${EXTRA}$DBU_BIN share $REMOTE_PATH$SCREENSHOTS_DIR/$FILENAME | cut -c15-) 
fi

## if not store local copy, remoe the temporary image file
if [ $LOCAL_COPY -ne 1 ]; then
	rm -f /tmp/$FILENAME
fi

## copy share link to clipboard
echo $IMAGEPATH | xclip

## output to user link is copied
echo "Screenshot completed. URL copied to clipboard $IMAGEPATH"

## notify user link is copied
notify-send "Screenshot completed" "URL copied to clipboard $IMAGEPATH"

## opem image up for viewing in web browser
$BROWSER $IMAGEPATH 2> /dev/null &

exit 0
